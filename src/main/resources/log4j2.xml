<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN" xmlns="http://logging.apache.org/log4j/2.0/config">

    <!--
    status 속성은 현재 설정의 상태를 나타냅니다. 여기서는 "WARN"으로 설정되어 있으므로 경고 수준의 메시지를 표시할 수 있습니다.
    -->


    <!--
    Appenders 요소는 로그 이벤트를 출력하는 방법을 정의합니다. 여기서는 하나의 Console 앱렌더를 정의하고 있습니다. 이 앱렌더는 콘솔에 로그 메시지를 출력하도록 설정되어 있습니다.
    -->
    <Appenders>
        <!--
        target 속성은 로그를 출력할 대상을 지정합니다. 여기서는 SYSTEM_OUT으로 설정되어 있으므로 표준 출력에 메시지를 출력합니다.
        -->
    <Console name="Console" target="SYSTEM_OUT">
<!--    로깅 이벤트가 발생한 시간 / 로깅 이벤트를 발생시킨 스레드의 이름 / -5는 왼쪽 정렬을 의미하고, 최소 너비가 5 / 로거의 이름 /로깅 이벤트의 메시지,  줄 바꿈 문자
    예시 :        09:46:44.492           [http-nio-8090-exec-1]                INFO
        com.green.jdbcex.service.TodoService        -        [TodoVO(tno=1, title=Test1..., dueDate=2024-04-01, finished=true)]
            로깅레벨은 맨 위에 status에서 설정-->
        <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"></PatternLayout>
    </Console>
    </Appenders>

    <!--
    Loggers 요소는 로그 이벤트를 수신하고 처리하는 로거들을 정의합니다. 여기서는 Root 로거가 정의되어 있으며, 이는 모든 로그 이벤트를 처리합니다.
    level 속성은 이 로거가 어떤 로그 레벨 이상의 메시지만 처리할지를 지정합니다. 여기서는 info로 설정되어 있으므로 info 레벨 이상의 메시지만 처리합니다.
    AppenderRef를 사용하여 이 로거가 사용할 앱렌더를 지정하고 있습니다.
    -->
    <Loggers>
        <Root level="info">
            <AppenderRef ref="Console"></AppenderRef>
        </Root>
    </Loggers>
</Configuration>